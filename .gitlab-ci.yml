# GitLab CI to build Vite app and publish to GitHub Pages

stages:
  - build
  - deploy

variables:
  WEB_DIR: "web"
  DIST_DIR: "web/dist"
  NODE_ENV: "production"
  # Set BASE_PATH to your GitHub Pages base path.
  # For user/org pages (user.github.io), use "/".
  # For project pages, use "/<repo-name>/".
  BASE_PATH: "/countdown-timer-gpt-5-test/"
  # Target GitHub repo in OWNER/REPO form. Override in CI/CD settings if different.
  GH_REPO: "bmort/countdown-timer-gpt-5-test"
  # Target branch for GitHub Pages
  GH_PAGES_BRANCH: "gh-pages"

build:
  stage: build
  image: node:20
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - ${WEB_DIR}/node_modules/
  script:
    - cd "$WEB_DIR"
    - npm ci
    # Pass base via CLI to avoid modifying vite.config.ts
    - npm run build -- --base="${BASE_PATH}"
  artifacts:
    when: on_success
    expire_in: 1 week
    paths:
      - ${DIST_DIR}

deploy:gh-pages:
  stage: deploy
  needs: ["build"]
  image: alpine:3.19
  variables:
    GIT_STRATEGY: none
  before_script:
    - apk add --no-cache git
  script:
    - test -n "$GH_TOKEN" || { echo "GH_TOKEN is required (GitHub token with repo write)."; exit 1; }
    - export REMOTE_URL="https://x-access-token:${GH_TOKEN}@github.com/${GH_REPO}.git"
    - mkdir -p out
    - cp -R ${DIST_DIR}/. out/
    - cd out
    - git init
    - git config user.name "gitlab-ci"
    - git config user.email "ci@example.com"
    - git checkout -b "$GH_PAGES_BRANCH"
    - touch .nojekyll
    # Optional custom domain support
    - |
      if [ -n "$GH_PAGES_CNAME" ]; then
        echo "$GH_PAGES_CNAME" > CNAME
      fi
    - git add -A
    - git commit -m "Deploy: ${CI_COMMIT_SHORT_SHA} from ${CI_PROJECT_PATH}"
    - git remote add origin "$REMOTE_URL"
    - git push -f origin "$GH_PAGES_BRANCH"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: on_success
    - when: never

