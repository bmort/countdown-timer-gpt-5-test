name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Cache Vite prebundle
        uses: actions/cache@v4
        with:
          path: |
            web/node_modules/.vite
          key: ${{ runner.os }}-vite-${{ hashFiles('web/package-lock.json', 'web/package.json', 'web/vite.config.ts', 'web/tailwind.config.js', 'web/postcss.config.cjs', 'web/tsconfig*.json') }}
          restore-keys: |
            ${{ runner.os }}-vite-

      - name: Cache Vitest
        uses: actions/cache@v4
        with:
          path: |
            web/node_modules/.vitest
            $HOME/.vitest
          key: ${{ runner.os }}-vitest-${{ hashFiles('web/package-lock.json', 'web/vite.config.ts', 'web/tsconfig*.json') }}
          restore-keys: |
            ${{ runner.os }}-vitest-

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Compute base path
        id: base
        shell: bash
        run: |
          REPO="${{ github.event.repository.name }}"
          OWNER="${{ github.repository_owner }}"
          if [[ "$REPO" == "$OWNER.github.io" ]]; then
            echo "base_path=/" >> "$GITHUB_OUTPUT"
          else
            echo "base_path=/$REPO/" >> "$GITHUB_OUTPUT"
          fi

      - name: Build
        run: npm run build -- --base="${{ steps.base.outputs.base_path }}"

      - name: Add .nojekyll
        run: |
          touch dist/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: web/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
